"""
Django settings for nocodi project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
from pathlib import Path
from typing import List

from environ import Env

env = Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-)+e)1io38_l%_x0^!54n3wcfxq23%igr8p!&l89ns&mjmmtjie"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default=False)

ALLOWED_HOSTS: List[str] = ["api.nocodi.ir", "localhost", "127.0.0.1", "backend"]

CORS_ALLOW_ALL_ORIGINS = env("CORS_ALLOW_ALL_ORIGINS", default=True)

CSRF_TRUSTED_ORIGINS: List[str] = [
    "https://api.nocodi.ir",
    "http://api.nocodi.ir",
]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "rest_framework",
    "drf_spectacular",
    "corsheaders",
    "iam.apps.IamConfig",
    "bot.apps.BotConfig",
    "component.apps.ComponentConfig",
    "flow.apps.FlowConfig",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "iam.middleware.JWTAuthMiddleware",
    "nocodi.middleware.CacheMiddleware",
]

ROOT_URLCONF = "nocodi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "nocodi.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("DB_NAME", default="nocodi"),
        "USER": env("DB_USER", default="nocodi"),
        "PASSWORD": env("DB_PASSWORD", default="password"),
        "HOST": env("DB_HOST", default="127.0.0.1"),
        "PORT": env("DB_PORT", default="5433"),
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

REST_FRAMEWORK = {
    # YOUR SETTINGS
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    ),
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Nocodi API",
    "DESCRIPTION": "NoCodi project API Documents",
    "VERSION": "1.0.0",
    "SCHEMA_PATH_PREFIX": "/api/*",
    # 'SERVE_PERMISSIONS': ['rest_framework.permissions.IsAuthenticated'],
    "DISABLE_ERRORS_AND_WARNINGS": True,
}

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


MEDIA_URL = "/media/"  # URL path for accessing media files
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # Directory to store uploaded files

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

JWT_ALGORITHM = env("JWT_ALGORITHM", default="HS256")
JWT_SECRET = env("JWT_SECRET", default="secret")
JWT_DURATION = env("JWT_DURATION", default=60 * 60 * 24)

REDIS_HOST = env("REDIS_HOST", default="localhost")
REDIS_PORT = env("REDIS_PORT", default=6380)

SMTP_FROM_EMAIL = env("SMTP_FROM_EMAIL", default="nocodi91@gmail.com")
SMTP_PASSWORD = env("SMTP_PASSWORD", default="password").replace("-", " ")

TESTING = sys.argv[1:2] == ["test"]

APPEND_SLASH = True
STATIC_CACHE_PATHS = env("STATIC_CACHE_PATHS", default="/api-doc/schema/").split(",")

# Bale API Settings
BALE_API_URL = env("BALE_API_URL", default="https://tapi.bale.ai")
